# =============================================================================
# Settings
# Ref: https://github.com/gokcehan/lf/wiki/Tips
# =============================================================================
set icons          true
set ignorecase     true
set drawbox        true
set dircounts      true
set info           size:time
set number         true
set relativenumber true
# set mouse

set previewer ~/.config/lf/scripts/previewer_kitty
set cleaner   ~/.config/lf/scripts/cleaner_kitty

# interpreter for shell commands
set shell sh

# set '-eu' options for shell commands
# These options are used to have safer shell commands. Option '-e' is used to
# exit on error and option '-u' is used to give error for unset variables.
# Option '-f' disables pathname expansion which can be useful when $f, $fs, and
# $fx variables contain names with '*' or '?' characters. However, this option
# is used selectively within individual commands as it can be limiting at
# times.
set shellopts '-eu'

# set internal field separator (IFS) to "\n" for shell commands
# This is useful to automatically split file names in $fs and $fx properly
# since default file separator used in these variables (i.e. 'filesep' option)
# is newline. You need to consider the values of these options and create your
# commands accordingly.
set ifs "\n"

# leave some space at the top and the bottom of the screen
set scrolloff 10

# =============================================================================
# Key bindings
# =============================================================================
# Cut and delete
map d  # leave the command name empty like this for unmapping
map dd cut
map dD delete

# Create files and folders
map a push %touch<space>  # Make new file
map A push %mkdir<space>  # Make new directory

# Toggle line number
map zl :set number!; set relativenumber!

# Toggle mouse
map zm set mouse!

# Bookmarks
map gD cd ~/Downloads
map gC cd ~/Documents
map gP cd ~/Pictures
map gM cd ~/Music
map gW cd ~/workspaces

# Additional mappings of some existing commands
map <enter> shell-wait
map .       set hidden!

# Mappings for custom functions
map x extract
map o push :open-with<space>
map R bulkrename

# Filter
map <c-f> push :setfilter<space>

# =============================================================================
# Custom functions
# =============================================================================
# Dynamically set number of columns -------------------------------------------
cmd recol ${{
    w=$(tput cols)
    if [ $w -le 80 ]; then
        lf -remote "send $id set ratios 1:2"
    else
        lf -remote "send $id set ratios 1:2:3"
    fi
}}
# cmd recol ${{
#     w=$(tput cols)
#     if [ $w -le 80 ]; then
#         lf -remote "send $id set ratios 1:2"
#     elif [ $w -le 160 ]; then
#         lf -remote "send $id set ratios 1:2:3"
#     else
#         lf -remote "send $id set ratios 1:2:3:5"
#     fi
# }}

recol

# Bulkrename multiple files ---------------------------------------------------
cmd bulkrename ${{
    index=$(mktemp /tmp/lf-bulk-rename-index.XXXXXXXXXX)
    if [ -n "${fs}" ]; then
        echo "$fs" > $index
    else
        echo "$(ls "$(dirname $f)" | tr ' ' "\n")" > $index
    fi
    index_edit=$(mktemp /tmp/lf-bulk-rename.XXXXXXXXXX)
    cat $index > $index_edit
    $EDITOR $index_edit
    if [ $(cat $index | wc -l) -eq $(cat $index_edit | wc -l) ]; then
        max=$(($(cat $index | wc -l)+1))
        counter=1
        while [ $counter -le $max ]; do
            a="$(cat $index | sed "${counter}q;d")"
            b="$(cat $index_edit | sed "${counter}q;d")"
            counter=$(($counter+1))

            [ "$a" = "$b" ] && continue
            [ -e "$b" ] && echo "File exists: $b" && continue
            mv "$a" "$b"
        done
    else
        echo "Number of lines must stay the same"
    fi
    rm $index $index_edit
}}

# Change windows title when cd in a dir ---------------------------------------
cmd on-cd &{{
    # '&' commands run silently in background (which is what we want here),
    # but are not connected to stdout.
    # To make sure our escape sequence still reaches stdout we pipe it to /dev/tty
    printf "\033]0; $PWD\007" > /dev/tty
}}

on-cd


# Extract the current file with the right command -----------------------------
cmd extract ${{
    set -f
    case $f in
        *.tar.bz2)   tar xjf $f   ;;
        *.tar.gz)    tar xzf $f   ;;
        *.bz2)       bunzip2 $f   ;;
        *.rar)       unrar x $f   ;;
        *.gz)        gunzip $f    ;;
        *.tar)       tar xf $f    ;;
        *.tbz2)      tar xjf $f   ;;
        *.tgz)       tar xzf $f   ;;
        *.zip)       unzip $f     ;;
        *.Z)         uncompress $f;;
        *.7z)        7z x $f      ;;
        *.deb)       ar x $f      ;;
        *.tar.xz)    tar xf $f    ;;
        *.tar.zst)   tar xf $f    ;;
    esac
}}


# Open with -------------------------------------------------------------------
cmd open-with %"$@" "$fx"


# vi: ft=config
